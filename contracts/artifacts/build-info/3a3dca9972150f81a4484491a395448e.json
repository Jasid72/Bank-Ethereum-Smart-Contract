{
	"id": "3a3dca9972150f81a4484491a395448e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ownable.sol": {
				"content": "pragma solidity ^0.8.5;\r\n\r\n\r\ncontract Ownable{\r\n    address payable internal owner;\r\n    modifier onlyowner{\r\n        require(owner == msg.sender, \"Yor are not the owner\");\r\n        _;\r\n    }\r\n    constructor(){\r\n        owner = payable(msg.sender);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":29:259  contract Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":197:256  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":237:247  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":221:226  owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":221:248  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":29:259  contract Ownable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":29:259  contract Ownable{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122041ffce8a1c235892627f353409ae5be2a8cc4b6e6ca2e89f28083c2f8743ce1464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603e8060595f395ff3fe60806040525f80fdfea264697066735822122041ffce8a1c235892627f353409ae5be2a8cc4b6e6ca2e89f28083c2f8743ce1464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3E DUP1 PUSH1 0x59 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE SELFDESTRUCT 0xCE DUP11 SHR 0x23 PC SWAP3 PUSH3 0x7F3534 MULMOD 0xAE JUMPDEST 0xE2 0xA8 0xCC 0x4B PUSH15 0x6CA2E89F28083C2F8743CE1464736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "29:230:0:-:0;;;197:59;;;;;;;;;;237:10;221:5;;:27;;;;;;;;;;;;;;;;;;29:230;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea264697066735822122041ffce8a1c235892627f353409ae5be2a8cc4b6e6ca2e89f28083c2f8743ce1464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE SELFDESTRUCT 0xCE DUP11 SHR 0x23 PC SWAP3 PUSH3 0x7F3534 MULMOD 0xAE JUMPDEST 0xE2 0xA8 0xCC 0x4B PUSH15 0x6CA2E89F28083C2F8743CE1464736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "29:230:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "24329",
								"totalCost": "36729"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29,
									"end": 259,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29,
									"end": 259,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29,
									"end": 259,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 197,
									"end": 256,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 197,
									"end": 256,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 197,
									"end": 256,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 197,
									"end": 256,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 197,
									"end": 256,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 197,
									"end": 256,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 256,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 197,
									"end": 256,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 197,
									"end": 256,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 197,
									"end": 256,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 197,
									"end": 256,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 237,
									"end": 247,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 221,
									"end": 226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 226,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 221,
									"end": 248,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 221,
									"end": 248,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 221,
									"end": 248,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 221,
									"end": 248,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29,
									"end": 259,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 259,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 259,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29,
									"end": 259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 259,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122041ffce8a1c235892627f353409ae5be2a8cc4b6e6ca2e89f28083c2f8743ce1464736f6c634300081a0033",
									".code": [
										{
											"begin": 29,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29,
											"end": 259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29,
											"end": 259,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Ownable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0x4ca4efe8ea0111dfd829953d9c319d4639fc0cce86397ddd704dcf9a17139f7e\",\"urls\":[\"bzz-raw://70294efa0abbb33ea22752607731e0375907db33c182d16b2deb548c7f0188cb\",\"dweb:/ipfs/QmYEVGHy1SXseLcVxW1c9XxB6xR94bhhzwc1TbckX3pTsd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Ownable.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Ownable.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							28
						]
					},
					"id": 29,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 28,
							"linearizedBaseContracts": [
								28
							],
							"name": "Ownable",
							"nameLocation": "38:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "77:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 28,
									"src": "52:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "52:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "107:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 6,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "126:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 7,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "135:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 8,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "139:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "135:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "126:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7220617265206e6f7420746865206f776e6572",
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "147:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25dca9ff5c874d6128f3ea5a759ac87283536c40397edff06b4f383abfec9913",
																"typeString": "literal_string \"Yor are not the owner\""
															},
															"value": "Yor are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25dca9ff5c874d6128f3ea5a759ac87283536c40397edff06b4f383abfec9913",
																"typeString": "literal_string \"Yor are not the owner\""
															}
														],
														"id": 5,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "118:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "118:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "118:53:0"
											},
											{
												"id": 13,
												"nodeType": "PlaceholderStatement",
												"src": "182:1:0"
											}
										]
									},
									"id": 15,
									"name": "onlyowner",
									"nameLocation": "98:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "107:0:0"
									},
									"src": "89:102:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "210:46:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 18,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "221:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "237:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "241:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "229:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 19,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "229:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "229:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "221:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "221:27:0"
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:0:0"
									},
									"scope": 28,
									"src": "197:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 29,
							"src": "29:230:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:261:0"
				},
				"id": 0
			}
		}
	}
}